pipeline {
    agent any

    parameters {
        booleanParam(
            name: 'REMOVE_VOLUMES',
            defaultValue: true,
            description: 'Remove Docker volumes (destroys database data)'
        )
        booleanParam(
            name: 'FORCE_CLEANUP',
            defaultValue: false,
            description: 'Force remove containers even if they are running'
        )
    }

    stages {
        stage('Cleanup TinyURL Services') {
            steps {
                script {
                    echo "🧹 Cleaning up ALL TinyURL services (ignoring health status)..."

                    // Always force stop all containers first
                    sh '''
                        echo "🛑 Force stopping all TinyURL containers..."
                        docker kill tinyurl-mysql tinyurl-redis tinyurl-backend tinyurl-frontend 2>/dev/null || true
                        docker rm -f tinyurl-mysql tinyurl-redis tinyurl-backend tinyurl-frontend 2>/dev/null || true
                    '''

                    if (params.REMOVE_VOLUMES) {
                        sh '''
                            echo "🗑️ Stopping services and removing volumes..."
                            docker-compose down -v --remove-orphans || true
                        '''
                    } else {
                        sh '''
                            echo "🛑 Stopping services but preserving volumes..."
                            docker-compose down --remove-orphans || true
                        '''
                    }

                    if (params.FORCE_CLEANUP) {
                        sh '''
                            echo "💥 Additional force cleanup..."

                            # Remove any containers with tinyurl in the name
                            docker ps -a --filter name=tinyurl --format "{{.ID}}" | xargs -r docker rm -f 2>/dev/null || true

                            # Remove the network
                            docker network rm tinyurl_tinyurl-network 2>/dev/null || true

                            # Remove any tinyurl images (optional - commented out by default)
                            # docker images --filter reference="tinyurl*" --format "{{.ID}}" | xargs -r docker rmi -f 2>/dev/null || true
                        '''
                    }

                    sh '''
                        echo "🧽 Cleaning up unused Docker resources..."
                        docker system prune -f || true

                        echo "📊 Docker status after cleanup:"
                        docker ps -a --filter name=tinyurl || echo "No TinyURL containers found"
                        echo "Networks:"
                        docker network ls | grep tinyurl || echo "No TinyURL networks found"
                    '''

                    echo "✅ Complete cleanup finished!"
                }
            }
        }
    }

    post {
        always {
            echo '🎯 TinyURL services have been cleaned up'
            echo '▶️ You can now run the main pipeline again'
        }
    }
}