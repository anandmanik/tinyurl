version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: tinyurl-mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: tinyurl
      MYSQL_USER: tinyurl
      MYSQL_PASSWORD: tinyurl
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - tinyurl-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tinyurl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tinyurl-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./tinyurl-api
      dockerfile: Dockerfile
    container_name: tinyurl-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/tinyurl
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=1fe2275ec12ed522e57b743c64facf12
      - BASE_URL=http://localhost
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tinyurl-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./tinyurl-frontend
      dockerfile: Dockerfile
    container_name: tinyurl-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - tinyurl-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  tinyurl-network:
    driver: bridge